@page "/inventory/details/{id:int}"
@rendermode InteractiveServer

@if (transactionDetails == null)
{
    <div class="text-center mt-5">
        <h4 class="text-danger">Transaction not found!</h4>
        <button class="btn btn-secondary">Back</button>
    </div>
}
else
{
    <div class="container mt-4">
       <div class="card shadow-lg p-4">
            <div class="card-body">
                <h2 class="card-title text-primary">@transactionDetails.ProductName</h2>
                <h5 class="text-muted">@transactionDetails.Category</h5>
                <hr />

                <p><strong>Description:</strong> @transactionDetails.ProductDescription</p>
                <p><strong>Total Quantity:</strong> @transactionDetails.TotalQuantity</p>
                <p><strong>Last Modified:</strong> @transactionDetails.LastModifiedDate.ToString("yyyy-MM-dd")</p>
            </div>
        </div>

        <h3 class="mt-4">Transaction History</h3>
        <div class="table-responsive">
            <table class="table table-bordered table-hover mt-3">
                <thead class="table-dark">
                    <tr>
                        <th>#</th>
                        <th>Transaction Type</th>
                        <th>Date</th>
                        <th>Quantity</th>
                        <th>User</th>
                        <th>Remarks</th>
                    </tr>
                </thead>
                <tbody>
                    @if (transactionDetails.TransactionItems.Any())
                    {
                        int index = 1;
                        @foreach (var item in transactionDetails.TransactionItems)
                        {
                            <tr>
                                <td>@index</td>
                                <td>
                                    <span class="badge @(GetBadgeClass(item.TransactionType))">@item.TransactionType</span>
                                </td>
                                <td>@item.TransactionDate.ToString("yyyy-MM-dd")</td>
                                <td>@item.Quantity</td>
                                <td>@item.UserName</td>
                                <td>@item.TransactionsItemLog</td>
                            </tr>
                            index++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center text-danger">No transactions found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <button class="btn btn-secondary mt-3">Back</button>
    </div>
}

@code {

    [Parameter] public int Id { get; set; }
    private InventoryTransactionItemViewModel transactionDetails;

    protected override async Task OnInitializedAsync()
    {
        transactionDetails = await InventoryService.GetInventoryTransactionById(Id);
    }

    private string GetBadgeClass(string transactionType)
    {
        return transactionType switch
        {
            "Added" => "bg-success",
            "Sold" => "bg-danger",
            "Updated" => "bg-warning",
            _ => "bg-secondary"
        };
    }
}
