@page "/orders"
@rendermode InteractiveServer
@inject IOrderService OrderService
@inject IJSRuntime JSRuntime

<h3>My Orders</h3>

@if (isLoading)
{
    <p>Loading your orders...</p>
}
else if (!orders.Any())
{
    <div class="alert alert-info">
        You don't have any orders yet.
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Order Date</th>
                <th>Total</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.Username</td>
                    <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                    <td>$@order.TotalAmount.ToString("F2")</td>
                    <td>@order.OrderStatus</td>
                    <td>
                        <button @onclick="() => ShowOrderDetails(order)" class="btn btn-sm btn-primary">Details</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Order Details Modal -->
@if (selectedOrder != null)
{
    <div class="modal fade show" style="display: block" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Order Details</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Order Information</h6>
                            <table class="table table-sm">
                                <tbody>
                                    <tr>
                                        <th>Order ID:</th>
                                        <td>@selectedOrder.OrderId</td>
                                    </tr>

                                    <tr>
                                        <th>Order Date:</th>
                                        <td>@selectedOrder.OrderDate.ToString("yyyy-MM-dd HH:mm")</td>
                                    </tr>
                                    <tr>
                                        <th>Status:</th>
                                        <td>@selectedOrder.OrderStatus</td>
                                    </tr>
                                    <tr>
                                        <th>Total Amount:</th>
                                        <td>$@selectedOrder.TotalAmount.ToString("F2")</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                     
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private List<OrderView> orders = new();
    private bool isLoading = true;
    private OrderView selectedOrder;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            isLoading = true;
            orders = (await OrderService.GetOrdersForCurrentUserAsync()).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading orders: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowOrderDetails(OrderView order)
    {
        selectedOrder = order;
    }

    private void CloseModal()
    {
        selectedOrder = null;
    }
}