@page "/products"
@rendermode InteractiveServer

<h3>Product Management</h3>

<button class="btn btn-primary mb-3" @onclick="GoToManageProdudct">Add Product</button>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Stock</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in products)
        {
            <tr>
                <td>@product.ProductName</td>
                <td>@product.Price</td>
                <td>@product.StockQuantity</td>
                <td>
                    <button class="btn btn-warning btn-sm">Edit</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => DeleteProduct(product.ProductId)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Products> products = new();
    private Products newProduct = new Products();
    private bool isAdding = false;

    protected override async Task OnInitializedAsync()
    {
        products = (await ProductService.GetAllProductsAsync()).ToList();
    }

    private void GoToManageProdudct()
    {
        Navigation.NavigateTo("/manageproduct");
    }

    // private async Task AddProduct()
    // {
    //     await ProductService.AddProductAsync(newProduct);
    //     isAdding = false;
    //     products = (await ProductService.GetAllProductsAsync()).ToList();
    // }

    // private void CancelAdd()
    // {
    //     isAdding = false;
    // }

    private async Task DeleteProduct(int id)
    {
        await ProductService.DeleteProductAsync(id);
        products = (await ProductService.GetAllProductsAsync()).ToList();
    }

    // private void EditProduct(Products product)
    // {
    //     newProduct = product;
    //     isAdding = true;
    // }
}
